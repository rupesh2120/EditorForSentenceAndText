{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","class","backgroundColor","onChange","event","target","value","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Title","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e32d7ae9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav\r\n\t\t\t\tclassName={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n\t\t\t>\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"/\">\r\n\t\t\t\t\t{props.title}\r\n\t\t\t\t</a>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\t\tdata-target=\"#navbarSupportedContent\"\r\n\t\t\t\t\taria-controls=\"navbarSupportedContent\"\r\n\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t\t<li className=\"nav-item active\">\r\n\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"/\">\r\n\t\t\t\t\t\t\t\t{props.aboutText} <span className=\"sr-only\">(current)</span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t{/* <form className=\"form-inline my-2 my-lg-0\">\r\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form> */}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`form-check form-switch text-${\r\n\t\t\t\t\t\t\tprops.mode === \"light\" ? \"dark\" : \"light\"\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonClick={props.toggleMode}\r\n\t\t\t\t\t\t\tclassName=\"form-check-input\"\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tid=\"flexSwitchCheckDefault\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tclassName=\"form-check-label\"\r\n\t\t\t\t\t\t\thtmlFor=\"flexSwitchCheckDefault\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tEnable Dark Mode\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\taboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n\tTitle: \"Set title here\",\r\n\taboutText: \"About text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\tconst [text, setText] = useState(\"Enter text here\");\r\n\r\n\tconst handleUpClick = () => {\r\n\t\tlet newText = text.toUpperCase();\r\n\t\tsetText(newText);\r\n\t};\r\n\r\n\tconst handleLowerClick = () => {\r\n\t\tlet newText = text.toLowerCase();\r\n\t\tsetText(newText);\r\n\t};\r\n\r\n\tconst handleExtraSpaces = () => {\r\n\t\tlet newText = text.split(/[ ]+/);\r\n\t\tsetText(newText.join(\" \"));\r\n\t};\r\n\r\n\tconst handleClearClick = () => {\r\n\t\tlet newText = \"\";\r\n\t\tsetText(newText);\r\n\t};\r\n\r\n\tconst handleOnChange = (event) => {\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\tconst handleCopy = () => {\r\n\t\tvar text = document.getElementById(\"myBox\");\r\n\t\ttext.select();\r\n\t\tnavigator.clipboard.writeText(text.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n\t\t\t\t{props.heading}\r\n\t\t\t</h1>\r\n\t\t\t<div class=\"form-group mb-3\">\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n\t\t\t\t\t\tcolor: props.mode === \"dark\" ? \"white\" : \"black\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tid=\"myBox\"\r\n\t\t\t\t\trows=\"3\"\r\n\t\t\t\t></textarea>\r\n\t\t\t</div>\r\n\t\t\t<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n\t\t\t\tConvert To Uppercase\r\n\t\t\t</button>\r\n\t\t\t<button className=\"btn btn-primary mx-2\" onClick={handleLowerClick}>\r\n\t\t\t\tConvert To Lowercase\r\n\t\t\t</button>\r\n\t\t\t<button className=\"btn btn-primary mx-2 \" onClick={handleCopy}>\r\n\t\t\t\tCopy text\r\n\t\t\t</button>\r\n\t\t\t<button className=\"btn btn-primary mx-2 \" onClick={handleExtraSpaces}>\r\n\t\t\t\tRemove Extra Spaces\r\n\t\t\t</button>\r\n\t\t\t<button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n\t\t\t\tClear Text\r\n\t\t\t</button>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"container my-3\"\r\n\t\t\t\tstyle={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n\t\t\t>\r\n\t\t\t\t<h1>Your Text Summary</h1>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{text.split(\" \").length} Your words have {text.length} characters\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{0.008 * text.split(\" \").length} Minutes to read the above sentence\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () => {\n    if(mode === 'dark')\n    {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n    else\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n    }\n  }\n\n  return (\n    <>\n    <Navbar title = 'Textutils' mode={mode} toggleMode={toggleMode}/>\n    <div className=\"container my-3\">\n      <TextForm heading=\"Enter the text to analyze\" mode={mode} />\n      {/* <About /> */}\n    </div>\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}